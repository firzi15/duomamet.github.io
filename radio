<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>My Radio Shuffle Pro</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome CSS -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet">

  <style>
    body {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      color: white;
      text-align: center;
      padding: 20px;
      transition: background 1s ease, background-color 0.5s;
    }
    .player-container {
      background: rgba(255, 255, 255, 0.1);
      padding: 30px;
      border-radius: 20px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.2);
      width: 90%;
      max-width: 450px;
    }
    .btn-custom {
      margin: 10px 5px;
      padding: 10px 20px;
      font-size: 1.1rem;
    }
    audio {
      width: 100%;
      margin-top: 20px;
    }
    #current-song {
      margin-top: 15px;
      font-size: 1.1rem;
      font-weight: bold;
    }
    .rotate {
      animation: spin 4s linear infinite;
    }
    @keyframes spin {
      from {transform: rotate(0deg);}
      to {transform: rotate(360deg);}
    }
    .progress {
      height: 10px;
      margin-top: 20px;
      background-color: rgba(255,255,255,0.3);
    }
    .progress-bar {
      background-color: #ffeb3b;
    }
    #toast-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 9999;
    }
    #volume-control {
      margin-top: 20px;
    }
    #time-info {
      margin-top: 10px;
      font-size: 0.9rem;
    }
    .dark-mode {
      background-color: #121212 !important;
      color: white;
    }
    .light-mode {
      background-color: #f4f4f4 !important;
      color: black;
    }
  </style>
</head>
<body class="dark-mode">

<div class="player-container">
  <h1 class="mb-4">
    <i id="radio-icon" class="fas fa-radio fa-2x"></i><br> 
    My Radio Shuffle Pro
  </h1>

  <button id="startButton" class="btn btn-light btn-custom">
    <i class="fas fa-play"></i> Start Radio
  </button>

  <div id="control-buttons" class="d-none">
    <button id="prevButton" class="btn btn-outline-light btn-custom">
      <i class="fas fa-backward"></i>
    </button>
    <button id="nextButton" class="btn btn-outline-light btn-custom">
      <i class="fas fa-forward"></i>
    </button>
    <button id="shuffleButton" class="btn btn-outline-warning btn-custom">
      <i class="fas fa-random"></i>
    </button>
    <button id="themeButton" class="btn btn-outline-info btn-custom">
      <i class="fas fa-adjust"></i> Mode
    </button>
  </div>

  <audio id="player" controls class="mt-4 d-none"></audio>

  <div id="current-song" class="d-none mt-3">
    ðŸŽµ Now Playing: <span id="song-title"></span>
  </div>

  <div class="progress d-none" id="progress-container">
    <div class="progress-bar" id="progress-bar" role="progressbar"></div>
  </div>

  <div id="time-info" class="d-none">00:00 / 00:00</div>

  <div id="volume-control" class="d-none">
    <label for="volumeSlider" class="form-label">Volume</label>
    <input type="range" class="form-range" id="volumeSlider" min="0" max="1" step="0.01" value="1">
  </div>
</div>

<!-- Toast Container -->
<div id="toast-container" class="toast-container position-fixed bottom-0 end-0 p-3"></div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
  const songs = [
    { src: 'lagu1.mp3', title: 'Judul Lagu 1', bg: 'linear-gradient(to right, #ff7e5f, #feb47b)' },
    { src: 'lagu2.mp3', title: 'Judul Lagu 2', bg: 'linear-gradient(to right, #6a11cb, #2575fc)' },
    { src: 'lagu3.mp3', title: 'Judul Lagu 3', bg: 'linear-gradient(to right, #11998e, #38ef7d)' }
  ];

  function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
  }

  shuffle(songs);

  let currentSong = 0;
  const player = document.getElementById('player');
  const startButton = document.getElementById('startButton');
  const prevButton = document.getElementById('prevButton');
  const nextButton = document.getElementById('nextButton');
  const shuffleButton = document.getElementById('shuffleButton');
  const themeButton = document.getElementById('themeButton');
  const controlButtons = document.getElementById('control-buttons');
  const currentSongDiv = document.getElementById('current-song');
  const songTitleSpan = document.getElementById('song-title');
  const radioIcon = document.getElementById('radio-icon');
  const progressContainer = document.getElementById('progress-container');
  const progressBar = document.getElementById('progress-bar');
  const toastContainer = document.getElementById('toast-container');
  const volumeSlider = document.getElementById('volumeSlider');
  const volumeControl = document.getElementById('volume-control');
  const timeInfo = document.getElementById('time-info');
  let isDarkMode = true;

  function playSong(index) {
    player.src = songs[index].src;
    player.play();
    songTitleSpan.textContent = songs[index].title;
    currentSongDiv.classList.remove('d-none');
    progressContainer.classList.remove('d-none');
    volumeControl.classList.remove('d-none');
    timeInfo.classList.remove('d-none');
    document.body.style.background = songs[index].bg;
    showToast(`Sekarang memutar: ${songs[index].title}`);
  }

  function showToast(message) {
    const toast = document.createElement('div');
    toast.className = 'toast align-items-center text-bg-primary border-0 show';
    toast.setAttribute('role', 'alert');
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body">
          ${message}
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
      </div>`;
    toastContainer.appendChild(toast);

    setTimeout(() => {
      toast.remove();
    }, 3000);
  }

  function formatTime(seconds) {
    const min = Math.floor(seconds / 60) || 0;
    const sec = Math.floor(seconds % 60) || 0;
    return `${min.toString().padStart(2,'0')}:${sec.toString().padStart(2,'0')}`;
  }

  player.addEventListener('ended', () => {
    currentSong = (currentSong + 1) % songs.length;
    playSong(currentSong);
  });

  startButton.addEventListener('click', () => {
    startButton.classList.add('d-none');
    player.classList.remove('d-none');
    controlButtons.classList.remove('d-none');
    radioIcon.classList.add('rotate');
    playSong(currentSong);
  });

  nextButton.addEventListener('click', () => {
    currentSong = (currentSong + 1) % songs.length;
    playSong(currentSong);
  });

  prevButton.addEventListener('click', () => {
    currentSong = (currentSong - 1 + songs.length) % songs.length;
    playSong(currentSong);
  });

  shuffleButton.addEventListener('click', () => {
    shuffle(songs);
    currentSong = 0;
    playSong(currentSong);
    showToast('Playlist diacak!');
  });

  themeButton.addEventListener('click', () => {
    isDarkMode = !isDarkMode;
    if (isDarkMode) {
      document.body.classList.remove('light-mode');
      document.body.classList.add('dark-mode');
    } else {
      document.body.classList.remove('dark-mode');
      document.body.classList.add('light-mode');
    }
  });

  player.addEventListener('timeupdate', () => {
    if (player.duration) {
      const percent = (player.currentTime / player.duration) * 100;
      progressBar.style.width = percent + '%';
      timeInfo.textContent = `${formatTime(player.currentTime)} / ${formatTime(player.duration)}`;
    }
  });

  volumeSlider.addEventListener('input', () => {
    player.volume = volumeSlider.value;
  });
</script>

</body>
</html>
